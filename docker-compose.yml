version: "3.8"

services:
   db:
      image: postgres:15
      restart: always
      env_file:
         - .env
      environment:
         POSTGRES_USER: ${DB_USER}
         POSTGRES_PASSWORD: ${DB_PASSWORD}
         POSTGRES_DB: ${DB_NAME}
      ports:
         - "5432:5432" # Expose the database to the host
      volumes:
         - postgres_data:/var/lib/postgresql/data

   backend:
      build: ./room_booking_system
      container_name: backend
      environment:
         - DB_HOST=db # Set the database host to the Docker service name
         - DB_USER=${DB_USER}
         - DB_PASSWORD=${DB_PASSWORD}
         - DB_NAME=${DB_NAME}
         - DB_PORT=5432
         - EMAIL_HOST_USER=${EMAIL_HOST_USER}
         - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
         - CELERY_BROKER_URL=redis://redis:6379/0
         - CELERY_RESULT_BACKEND=redis://redis:6379/0
         - DJANGO_SETTINGS_MODULE=room_booking_system.settings

      ports:
         - "8000:8000"
      depends_on:
         - db
         - redis
   frontend:
      build:
         context: ./room_booking_frontend
      platform: linux/amd64
      container_name: frontend
      ports:
         - "5173:5173"
      depends_on:
         - backend

   redis:
      image: redis:6.2
      container_name: redis
      ports:
         - "6379:6379"

   celery:
      build: ./room_booking_system
      container_name: celery
      depends_on:
         - backend
         - redis
      volumes:
         - ./room_booking_system:/app
      environment:
         - EMAIL_HOST_USER=${EMAIL_HOST_USER}
         - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
         - CELERY_BROKER_URL=redis://redis:6379/0
         - CELERY_RESULT_BACKEND=redis://redis:6379/0
         - DJANGO_SETTINGS_MODULE=room_booking_system.settings
      command: ["celery", "-A", "room_booking_system", "worker", "--loglevel=info"]

volumes:
   postgres_data:
